     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0AFFFE0BFD                  s db 10,-1,-2,11,-3
    14                                      ls equ $-s
    15 00000005 <res 00000005>              r resb ls
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          
    21 00000000 B905000000                      mov ecx, ls
    22 00000005 BE00000000                      mov esi, 0; s
    23 0000000A BF00000000                      mov edi, 0; d
    24                                          
    25                                          repeta:
    26 0000000F 8A86[00000000]                      mov al, byte[s+esi]
    27 00000015 3C00                                cmp al, 0
    28 00000017 7C02                                JL negativ
    29 00000019 7D01                                JGE next
    30                                                  negativ:
    31                                                      mov byte[r+edi]; al
    31          ******************       error: invalid combination of opcode and operands
    32 0000001B 47                                          inc edi
    33                                                      ;inc esi
    34                                                      
    35                                                      ;jmp myendif
    36                                                      
    37                                                  next:
    38 0000001C 46                                          inc esi
    39                                                      ;myendif:
    40                                                      
    41 0000001D E2F0                            loop repeta
    42                                          
    43                                          ; exit(0)
    44 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
