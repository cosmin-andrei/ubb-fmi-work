     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf, fclose
     8                                  import exit msvcrt.dll  
     9                                  import fopen msvcrt.dll  
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import getchar msvcrt.dll
    13                                  extern scanf,printf,gets, getchar
    14                                  import scanf msvcrt.dll
    15                                  import printf msvcrt.dll
    16                                  import gets msvcrt.dll
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20                                      ;Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie in fisi
    21                                      
    22 00000000 2573000000000000            formatcitire dd '%s', 0
    23 00000008 637576696E74652E74-         nume_fisier db "cuvinte.txt", 0  ; numele fisierului care va fi creat
    23 00000011 787400             
    24 00000014 6100                        mod_acces db "a", 0 ; modul de deschidere a fisierului - 
    25                                      ; a - pentru adaugare. daca fiserul nu exista, se va crea      
    26 00000016 00                          text db "", 0 ; textul care va fi adaugat in fisier
    27                                                                      
    28 00000017 FFFFFFFF                    descriptor_fis dd -1 ; variabila in care vom salva descriptorul fisierului - necesar pentru a putea face referire la fisier
    29 0000001B 496E74726F64756365-         inceput db 'Introduceti cuvinte. Cand va opriti introduceti $:', 0
    29 00000024 746920637576696E74-
    29 0000002D 652E2043616E642076-
    29 00000036 61206F707269746920-
    29 0000003F 696E74726F64756365-
    29 00000048 746920243A00       
    30 0000004E 303132333435363738-         cifre db '0123456789'
    30 00000057 39                 
    31                                      lc equ $-cifre
    32 00000058 0000                        copie dw 0
    33                                  
    34                                  ; our code starts here
    35                                  segment code use32 class=code
    36                                      start:
    37                                          ; apelam fopen pentru a crea fisierul
    38                                          ; functia va returna in EAX descriptorul fisierului sau 0 in caz de eroare
    39                                          ; eax = fopen(nume_fisier, mod_acces)
    40 00000000 68[14000000]                    push dword mod_acces     
    41 00000005 68[08000000]                    push dword nume_fisier
    42 0000000A FF15[00000000]                  call [fopen]
    43 00000010 83C408                          add esp, 4*2                ; eliberam parametrii de pe stiva
    44                                  
    45 00000013 A3[17000000]                    mov [descriptor_fis], eax   ; salvam valoarea returnata de fopen in variabila descriptor_fis
    46                                          
    47                                          ; verificam daca functia fopen a creat cu succes fisierul (daca EAX != 0)
    48 00000018 83F800                          cmp eax, 0
    49 0000001B 747D                            je final
    50                                          
    51                                          ; adaugam/scriem textul in fisierul deschis folosind functia fprintf
    52                                          ; fprintf(descriptor_fis, text)
    53                                          ;mesaj pt citire sir
    54 0000001D 68[1B000000]                    push dword inceput
    55 00000022 FF15[00000000]                  call [printf]
    56 00000028 83C404                          add esp, 4*1
    57                                          
    58                                          repeta:
    59                                              ;citire text
    60 0000002B 68[16000000]                        push dword text
    61 00000030 68[00000000]                        push dword formatcitire
    62 00000035 FF15[00000000]                      call [scanf]
    63 0000003B 83C408                              add esp, 4*2
    64 0000003E A1[16000000]                        mov eax, [text]
    65 00000043 BE00000000                          mov esi, 0
    66                                                          
    67                                              ; verificam daca s-a introdus $ de la tastatura
    68 00000048 83F824                              cmp eax, '$' 
    69 0000004B 7444                                JE finalinserare
    70                                  
    71                                              
    72                                              ;verificam daca contine o cifra
    73                                              
    74 0000004D 8A86[16000000]                      mov al, byte[text+esi]
    75 00000053 890D[58000000]                      mov [copie], ecx
    76 00000059 BD00000000                          mov ebp, 0
    77 0000005E B90A000000                          mov ecx, lc
    78                                              repetacifre:
    79 00000063 8A9D[4E000000]                          mov bl, byte[cifre+ebp]
    80 00000069 38D8                                    cmp al, bl
    81 0000006B 7402                                    je adauga
    82 0000006D 7514                                    jne next
    83                                                      adauga:
    84 0000006F 68[16000000]                                    push dword text
    85 00000074 FF35[17000000]                                  push dword [descriptor_fis]
    86 0000007A FF15[00000000]                                  call [fprintf]
    87 00000080 83C408                                          add esp, 4*2
    88                                                      next:
    89 00000083 45                                              inc ebp
    90 00000084 E2DD                                loop repetacifre
    91                                              
    92 00000086 8B0D[58000000]                      mov ecx,[copie]
    93 0000008C 83C601                              add esi, 1
    94                                                     
    95 0000008F E29A                            loop repeta  
    96                                              finalinserare:
    97 00000091 FF15[00000000]                          call [fclose]
    98 00000097 83C404                                  add esp, 4
    99                                          
   100                                          
   101                                        final:
   102                                      
   103                                          ; exit(0)
   104 0000009A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   105 0000009C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
