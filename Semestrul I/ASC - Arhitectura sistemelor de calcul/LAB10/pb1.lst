     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions             
    10                                  extern scanf,printf,gets, getchar
    11                                  import scanf msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import gets msvcrt.dll
    14                                  import getchar msvcrt.dll 
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; Se citesc de la tastatura numere (in baza 10) pana cand se introduce cifra 0. Determinaţi şi afişaţi cel mai mic număr dintre cele citite.
    19 00000000 00000000                    x dd 0
    20 00000004 256400                      formatcitire db '%d', 0
    21 00000007 43656C206D6169206D-         mesajafisare db 'Cel mai mic numar este %d', 0
    21 00000010 6963206E756D617220-
    21 00000019 6573746520256400   
    22 00000021 496E74726F64756365-         inceput db 'Introduceti nr. Cand va opriti introduceti 0: ', 0
    22 0000002A 7469206E722E204361-
    22 00000033 6E64207661206F7072-
    22 0000003C 69746920696E74726F-
    22 00000045 64756365746920303A-
    22 0000004E 2000               
    23 00000050 00000080                    minim dd 80000000h
    24                                      
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ;mesaj pt citire sir
    30 00000000 68[21000000]                    push dword inceput
    31 00000005 FF15[00000000]                  call [printf]
    32 0000000B 83C404                          add esp, 4*1
    33                                          
    34                                          repeta:
    35                                              ;citire o val pentru x
    36 0000000E 68[00000000]                        push dword x
    37 00000013 68[04000000]                        push dword formatcitire
    38 00000018 FF15[00000000]                      call [scanf]
    39 0000001E 83C408                              add esp, 4*2
    40 00000021 A1[00000000]                        mov eax, [x]
    41                                                          
    42                                              ; verificam daca s-a introdus 0 de la tastatura
    43 00000026 83F800                              cmp eax, 0 
    44 00000029 7413                                JE finalsiafisare
    45 0000002B 7500                                JNE compara
    46                                              
    47                                              ;obtinem minimul
    48                                              compara:
    49 0000002D 3B05[50000000]                          cmp eax, [minim]
    50 00000033 7202                                    jb move
    51 00000035 EBD7                                    jmp repeta
    52                                                  move:
    53 00000037 A3[50000000]                                mov [minim], eax
    54 0000003C EBD0                                        jmp repeta
    55                                              
    56                                              finalsiafisare:
    57 0000003E FF35[50000000]                          push dword [minim]
    58 00000044 68[07000000]                            push dword mesajafisare
    59 00000049 FF15[00000000]                          call [printf]
    60 0000004F 83C408                                  add esp, 4*2
    61                                  
    62                                          ; exit(0)
    63 00000052 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    64 00000054 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
